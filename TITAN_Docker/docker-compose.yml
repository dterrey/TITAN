services:
  # --- Your TITAN Services ---
  titan_master:
    build: .
    container_name: titan_master
    volumes:
      - ../:/mnt/TITAN
    ports:
      - "5002:5000"      # TITAN UI (Host port changed to avoid conflict)
      - "11435:11434"    # Ollama API
      - "22:22"          # SFTP
    environment:
      - BASE_DIR=/mnt/TITAN
      - USERNAME=titan
      - PASSWORD=admin
    depends_on:
      - nodered
      - titan_processor
      - timesketch       # <-- Suggested: Added dependency on the Timesketch service
    networks:
      - titan-net
    restart: always

  titan:
    build: .
    volumes:
      - ../:/mnt/TITAN
    environment:
      - BASE_DIR=/mnt/TITAN
      - USERNAME=titan
      - PASSWORD=admin
    networks:
      - titan-net
    restart: always
    deploy:
      replicas: 1

  titan_admin:
    build: .
    container_name: titan_admin
    working_dir: /mnt/TITAN/TITAN_Docker/app/TITAN_Admin
    command: python app.py
    volumes:
      - /cases:/cases
      - ../:/mnt/TITAN
      - /var/run/docker.sock:/var/run/docker.sock
      - ../docker-compose.yml:/mnt/TITAN/docker-compose.yml
    ports:
      - "5111:5111"
    environment:
      - BASE_DIR=/mnt/TITAN
      - USERNAME=titan
      - PASSWORD=admin
    networks:
      - titan-net
    restart: always

  titan_client:
    build: .
    container_name: titan_client
    working_dir: /mnt/TITAN/TITAN_Docker/app/TITAN_Client
    command: python app.py
    volumes:
      - ../:/mnt/TITAN
    ports:
      - "5001:5001"
    networks:
      - titan-net
    restart: always

  titan_ioc:
    build: .
    container_name: titan_ioc
    working_dir: /mnt/TITAN/TITAN_Docker/app/TITAN_IOC
    command: python app.py
    volumes:
      - ../:/mnt/TITAN
    ports:
      - "5112:5112"
    networks:
      - titan-net
    restart: always

  titan_console:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: titan_console
    command: python3 /mnt/TITAN/TITAN_Docker/app/TITAN_Admin/TITAN_CONSOLE/app.py
    ports:
      - "5232:5232"
    volumes:
      - ../:/mnt/TITAN
    networks:
      - titan-net
    restart: always

  nodered:
    build:
      context: .
      dockerfile: Dockerfile.nodered
    container_name: nodered
    ports:
      - "1880:1880"
    volumes:
      - /cases:/cases
      - nodered_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - titan-net
    environment:
      - TZ=UTC
    restart: always

  titan_processor:
    build:
      context: .
      dockerfile: Dockerfile.titan_processor
    # container_name: titan_processor # <-- NOTE: Remove this line if you plan to scale this service to more than 1 instance
    volumes:
      - /cases:/cases
      - ../:/mnt/TITAN
    networks:
      - titan-net
    restart: always
    # --- Corrected privileges (no longer under 'deploy') ---
    cap_add:
      - SYS_ADMIN  # Grants many administrative privileges, including mount
    devices:
      - "/dev/fuse:/dev/fuse:rwm"
      - "/dev/loop-control:/dev/loop-control:rwm" # For mounting images
    security_opt:
      - "apparmor:unconfined"

  # --- Timesketch Services ---
  timesketch:
    container_name: timesketch-web
    image: us-docker.pkg.dev/osdfir-registry/timesketch/dev:latest
    command: timesketch
    ports:
      - "5000:5000" # Timesketch UI
      - "8080:8080" # Timesketch API
    depends_on:
      - ts_opensearch
      - ts_postgres
      - ts_redis
    environment:
      - POSTGRES_USER=timesketch
      - POSTGRES_PASSWORD=password # Use a more secure password
      - POSTGRES_ADDRESS=ts_postgres
      - POSTGRES_PORT=5432
      - OPENSEARCH_HOST=ts_opensearch
      - OPENSEARCH_PORT=9200
      - REDIS_ADDRESS=ts_redis
      - REDIS_PORT=6379
      - TIMESKETCH_USER=dev # Default user for Timesketch UI
      - TIMESKETCH_PASSWORD=dev # Default password
    restart: always
    networks:
      - titan-net

  ts_opensearch:
    container_name: ts_opensearch
    image: opensearchproject/opensearch:2.15.0
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ts_opensearch_data:/usr/share/opensearch/data
    networks:
      - titan-net

  ts_postgres:
    container_name: ts_postgres
    image: postgres:13.1-alpine
    environment:
      - POSTGRES_USER=timesketch
      - POSTGRES_PASSWORD=password # Use a more secure password
    restart: always
    volumes:
      - ts_postgres_data:/var/lib/postgresql/data
    networks:
      - titan-net

  ts_redis:
    container_name: ts_redis
    image: redis:6.0.10-alpine
    restart: always
    volumes:
      - ts_redis_data:/data
    networks:
      - titan-net

# --- Network Definition ---
networks:
  titan-net:
    driver: bridge

# --- Named Volumes for Persistence (Merged into one block) ---
volumes:
  nodered_data:
  ts_opensearch_data:
  ts_postgres_data:
  ts_redis_data: